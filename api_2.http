@baseUrl = http://localhost:3000

@adminToken = {{adminLogin.response.body.token}}

### Register a new user
# @name register
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
    "email": "bjarmah1@gmail.com",
    "password": "password123",
    "role": "user"
}

### Login
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
    "email": "bjarmah1@gmail.com",
    "password": "password123"
}

### Verify OTP
# @name verifyOTP
POST {{baseUrl}}/auth/verifyOTP
Content-Type: application/json

{
    "email": "bjarmah1@gmail.com",
    "otp": "{{login.response.body.testingOtp}}"
}

@authToken = {{verifyOTP.response.body.token}}
### Register Admin User
# @name registerAdmin
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
    "email": "admin@example.com",
    "password": "admin123",
    "role": "admin"
}

### Login as Admin
# @name adminLogin
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
    "email": "admin@example.com",
    "password": "admin123"
}

### Get Public Data
GET {{baseUrl}}/users/public

### Get User Profile (Authenticated)
# Ensure login request is executed before this request
GET {{baseUrl}}/users/profile
Authorization: Bearer {{authToken}}
### Update Profile (Authenticated)
# Ensure login request is executed before this request
PATCH {{baseUrl}}/users/profile
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "email": "updated@example.com"
}

### Get All Users (Admin Only)
GET {{baseUrl}}/users
Authorization: Bearer {{adminToken}}

### Assign Role (Admin Only)
POST {{baseUrl}}/auth/assign-role
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
    "id": "USER_ID_HERE",
    "role": "admin"
}

### Delete User (Admin Only)
DELETE {{baseUrl}}/users/delete/USER_ID_HERE
Authorization: Bearer {{adminToken}}